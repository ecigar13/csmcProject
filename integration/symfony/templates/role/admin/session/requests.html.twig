{% extends 'role/admin/base.html.twig' %}
{% block body %}
    <h4>New Requests</h4>
    <table id="new-requests" class="table table-striped table-bordered">
        <thead>
        <tr>
            <th>Topic</th>
            <th>Section(s)</th>
            <th>Instructor(s)</th>
            <th>Type</th>
            <th>Dates</th>
            <th>Materials</th>
            <th>Time Requested</th>
            <th>Approve</th>
            <th>Edit</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <hr>
    <h4>Pending</h4>
    <table id="pending" class="table table-striped table-bordered">
        <thead>
        <tr>
            <th>Topic</th>
            <th>Sections</th>
            <th>Instructor(s)</th>
            <th>Type</th>
            <th>Dates</th>
            <th>Materials</th>
            <th>Repeats</th>
            <th>Grades</th>
            <th>Edit</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <hr>
    <h4>Completed</h4>
    <table id="completed" class="table table-striped table-bordered">
        <thead>
        <tr>
            <th>Topic</th>
            <th>Sections</th>
            <th>Instructor(s)</th>
            <th>Type</th>
            <th>Dates</th>
            <th>Materials</th>
            <th>Repeats</th>
            <th>Grades</th>
            <th>Edit</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <hr>
    <h4>Denied Requests</h4>
    <table id="denied-requests" class="table table-striped table-bordered">
        <thead>
        <tr>
            <th>Topic</th>
            <th>Sections</th>
            <th>Instructor(s)</th>
            <th>Type</th>
            <th>Dates</th>
            <th>Reason</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <div class="modal"
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.21.0/moment.min.js"></script>
    <script>
        $(function () {
            var options = {
                paging: true,
                searching: true,
                lengthMenu: [10, 25, 50, 75, 100],
                ordering: true,
            };

            var render_sections = function (data, type, row) {
                if (data == null || data.length == 0) {
                    return 'No sections';
                }
                var courses = [];
                for (var index in data) {
                    var section = data[index];
                    var cstring = section.course.department.abbreviation + ' ' + section.course.number;
                    if (!courses[cstring]) {
                        courses[cstring] = []
                    }
                    courses[cstring].push(section.number);
                    // this is terribly inefficient if there are bunches of sections
                    // but most should be sorted already and size should be usually small
                    courses[cstring].sort();
                }
                courses.sort();

                var display = [];
                for (var cstring in courses) {
                    display.push(cstring + '.' + courses[cstring].join('/'));
                }

                return display.join(", ");
            };
            var render_user = function (data, type, row) {
                return data.firstName + " " + data.lastName;
            };
            var render_instructors = function (data, type, row) {
                if (data == null || data.length == 0) {
                    return 'No instructors';
                }
                var instructors = [];
                for (var index in data) {
                    var section = data[index];
                    for (var i in section.instructors) {
                        var instr = section.instructors[i];
                        if (!instructors[instr.username]) {
                            instructors[instr.username] = instr.firstName + " " + instr.lastName;
                        }
                    }
                }

                var display = [];
                for (var i in instructors) {
                    display.push(instructors[i]);
                }

                if (display.length == 0) {
                    return 'No instructors';
                }
                return display.join(", ");
            };
            var render_date_range = function (data, type, row) {
                return moment(row.startDate).format('MM/DD/YY') + ' - ' + moment(row.endDate).format('MM/DD/YY');
            };
            var render_created = function(data, type, row) {
                return moment(row.created).format('MM/DD/YY hh:mm a');
            };

            var render_approve = function (data, type, row) {
                return '<a href="/admin/session/create/' + row.id + '" class="btn btn-default">Approve</a>';
            };
            var render_edit = function (data, type, row) {
                if (row.status == 'new') {
                    return '<a href="/admin/session/request/edit/' + row.id + '" class="btn btn-default">Edit</a>';
                } else {
                    return '<a href="/admin/session/edit/' + row.session.id + '" class="btn btn-default">Edit</a>';
                }
            };
            var render_repeats = function (data, type, row) {
                if (row.session.repeats != null) {
                    return row.session.timeSlots.length + '/' + row.session.repeats;
                }
                return '1/1';
            };
            var render_grades = function (data, type, row) {
                return '<a href="/admin/session/grades/' + row.session.id + '" class="btn btn-default">Grades</a>';
            };

            var render_materials = function (data, type, row) {
                var s = ''
                for(var index in row.files) {
                    s += '<a href="/download/' + row.files[index].id + '">' + row.files[index].name + '</a><br>';
                }
                return s;
            };

            var new_options = Object.assign({
                ajax: {
                    url: '{{ path('admin_session_requests_feed', {status: 'new'}) }}',
                    dataSrc: ''
                },
                columns: [
                    {data: 'topic'},
                    {
                        data: 'sections',
                        render: render_sections
                    },
                    {
                        data: 'user',
                        render: render_user
                    },
                    {data: 'type.name'},
                    {
                        render: render_date_range
                    },
                    {render: render_materials},
                    {
                        render: render_created
                    },
                    {
                        render: render_approve
                    },
                    {
                        render: render_edit
                    }
                ]
            }, options);

            $('#new-requests').DataTable(new_options);

            var pending_options = Object.assign({
                ajax: {
                    url: '{{ path('admin_session_requests_feed', {status: 'pending'}) }}',
                    dataSrc: ''
                },
                columns: [
                    {data: 'session.topic'},
                    {
                        data: 'sections',
                        render: render_sections
                    },
                    {
                        data: 'sections',
                        render: render_instructors
                    },
                    {data: 'type.name'},
                    {render: render_date_range},
                    {render: render_materials},
                    {render: render_repeats},
                    {render: render_grades},
                    {render: render_edit}
                ]
            }, options);

            $('#pending').DataTable(pending_options);

            var completed_options = Object.assign({
                ajax: {
                    url: '{{ path('admin_session_requests_feed', {status: 'completed'}) }}',
                    dataSrc: ''
                },
                columns: [
                    {data: 'session.topic'},
                    {
                        data: 'sections',
                        render: render_sections
                    },
                    {
                        data: 'sections',
                        render: render_instructors
                    },
                    {data: 'type.name'},
                    {render: render_date_range},
                    {render: render_materials},
                    {render: render_repeats},
                    {render: render_grades},
                    {render: render_edit}
                ]
            }, options);
            $('#completed').DataTable(completed_options);

            {#var denied_options = Object.assign({#}
            {#ajax: {#}
            {#url: '{{ path('admin_session_requests_feed', {status: 'denied'}) }}',#}
            {#dataSrc: ''#}
            {#},#}
            {#columns: [#}
            {#{data: 'topic'},#}
            {#{#}
            {#data: 'sections',#}
            {#render: render_sections#}
            {#},#}
            {#{#}
            {#data: 'user',#}
            {#render: render_user#}
            {#},#}
            {#{data: 'type.name'},#}
            {#{#}
            {#render: render_date_range#}
            {#},#}
            {#{data: 'reason'}#}
            {#]#}
            {#});#}

            {#$('#denied-requests').DataTable(denied_options);#}
        });
    </script>
{% endblock %}