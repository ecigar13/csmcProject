{% extends "role/admin/base.html.twig" %}
{% block body %}


    <div class="center_col" role="main">
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">

                    <div class="x_title">
                        <h2>New User Group </h2>
                        <div class="clearfix"></div>
                    </div>

                    <div class="x_content">

                        {# Checking for form errors and displaying them#}
                        {% if not form.vars.valid %}
                            <div class="alert alert-danger" id="errorDiv">
                                {{ form_errors(form) }}
                            </div>
                        {% endif %}
                        <br/>

                        {{ form_start(form, {'attr': {'class': 'form-horizontal form-label-left'}}) }}

                        <form id="demo-form2" data-parsley-validate class="form-horizontal form-label-left">


                            <div class="form-group">

                                <div class="control-label col-md-3 col-sm-3 col-xs-12">
                                    {{ form_label(form.name) }}
                                </div>
                                {{ form_errors(form.name) }}
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    {{ form_widget(form.name, {'attr': {'class': 'form-control col-md-7 col-xs-12', 'required': 'required'}}) }}
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="control-label col-md-3 col-sm-3 col-xs-12">
                                    {{ form_label(form.description) }}
                                </div>
                                {{ form_errors(form.description) }}
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    {{ form_widget(form.description, {'attr': {'class': 'form-control col-md-7 col-xs-12', 'required': 'required'}}) }}
                                </div>
                            </div>


                            <div class="form-group">

                                <div class="control-label col-md-3 col-sm-3 col-xs-12">
                                    {{ form_label(form.users) }}
                                </div>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    {{ form_widget(form.roles, {'attr': {'class': 'form-control col-md-7 col-xs-12'}}) }}
                                </div>

                            </div>


                            <div class="form-group">
                                <div class="control-label col-md-3 col-sm-3 col-xs-12" data-color="white">
                                </div>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    {{ form_widget(form.users, {'attr': {'class': 'form-control col-md-7 col-xs-12'}}) }}
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                                    <button class="btn btn-secondary" type="button"
                                            onclick="location.href='./userGroupShowAll'">Cancel
                                    </button>
                                    {{ form_widget(form.save, {'attr': {'class': 'btn btn-success'}}) }}
                                </div>
                            </div>

                        </form>
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>




    {% block javascripts %}
        {{ parent() }}
        <script type="text/javascript">
            $(function () {

                $('#form_users').multiSelect({
                    selectableHeader: "<input type='text' class='search-input form-control' autocomplete='off' placeholder='search'>",
                    selectionHeader: "<input type='text' class='search-input form-control' autocomplete='off' placeholder='search'>",
                    cssClass: "form-group",

                    afterInit: function (ms) {
                        var that = this,
                            $selectableSearch = that.$selectableUl.prev(),
                            $selectionSearch = that.$selectionUl.prev(),
                            selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                            selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                        that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                            .on('keydown', function (e) {
                                if (e.which === 40) {
                                    that.$selectableUl.focus();
                                    return false;
                                }
                            });

                        that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                            .on('keydown', function (e) {
                                if (e.which == 40) {
                                    that.$selectionUl.focus();
                                    return false;
                                }
                            });
                        that.qs3 = $('#form_roles').quicksearch(selectableSearchString, {
                            'testQuery': function (query, txt, row) {
                                //use v to store data from roles
                                var v = $(row).data("roles");
                                if (v === "" || Array.isArray(v)) {
                                    return query[0] === "";
                                } else {
                                    console.log($(row).data("roles"));
                                    // change single quotes to double (double is required for JSON), because we had to change them to play nice with form style
                                    var d = $(row).data("roles").replace(/'/g, "\"");
                                    var r = JSON.parse(d);
                                    for (var i = 0; i < r.length; i++) {
                                        console.log(r[i]);
                                        if (r[i] == query[0]) {
                                            return true;
                                        }
                                    }
                                    return false;
                                }
                            }
                        }).on('change', function (e) {
                            if (e.which === 40) {
                                that.$selectableUl.focus();
                                return false;
                            }
                        });


                        var values = $('#searchable').val();
                        var variableToSend = values;

                        //  alert(values);

                    },
                    afterSelect: function () {
                        this.qs1.cache();
                        this.qs2.cache();
                    },
                    afterDeselect: function () {
                        this.qs1.cache();
                        this.qs2.cache();
                    },

                });
                //change the size of the two selectable tables
                $('.ms-container').css('width', '100%');
                $('.ms-list').addClass('form-control');

            });

        </script>



    {% endblock %}


{% endblock %}
