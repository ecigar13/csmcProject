{% extends 'role/admin/base.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.css">
    <link rel="stylesheet" type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.3/scheduler.min.css">

    <style>
        /*#row-main {*/
        /*overflow-x: hidden;*/
        /*}*/

        #content {
            transition: width 0.3s ease;
        }

        #sidebar {
            transition: margin 0.3s ease;
        }

        .collapsed {
            display: none;
        }

        .no-overflow {
            /*white-space: nowrap;*/
            /*overflow: hidden;*/
            /*text-overflow: ellipsis;*/
        }

        /*@media (min-width: 992px) {*/
        /*.collapsed {*/
        /*display: block;*/
        /*!* same width as sidebar *!*/
        /*margin-right: -25%;*/
        /*}*/
        /*}*/

        .row-eq-height {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
        }
    </style>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.21.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.3/scheduler.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#sidebar-tdocker-compose downoggle').on('click', function () {
                $("#sidebar").toggleClass("collapsed");
                $("#content").toggleClass("col-md-12 col-md-10");
            });

            $('#create-session').on('click', function () {
                $('#session-modal').modal('show');
            });

            $('#external-events .fc-event').each(function () {
                // store data so the calendar knows to render an event upon drop
                // $(this).data('event', {
                //     title: $.trim($(this).text()),
                //     stick: true
                // });

                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 999,
                    revert: true,
                    revertDuration: 0
                });
            });

            // TODO implement
            var resolveColor = function (event) {
                return '';
            }

            // TODO separate out quiz
            var transformEvent = function (event) {
                // console.log(event);
                var e = {};
                if (event.hasOwnProperty('quiz')) {
                    e.allDay = true;
                    e.title = event.quiz.topic;
                } else if (event.hasOwnProperty('session')) {
                    e.allDay = false;
                    e.title = event.session.topic;
                    e.registrations = event.registrations.length;
                    e.capacity = event.capacity;
                    e.assignments = event.assignments;
                    for (var i in event.assignments) {
                        if (event.assignments[i].absence) {
                            e.borderColor = '#ff0000';
                        }
                    }

                    e.id = event.id;
                } else {
                    return e;
                }

                e.start = event.startTime;
                e.end = event.endTime;
                e.location = {};
                e.location.id = event.location.id;
                e.location.room = event.location.room;

                e.color = resolveColor(event);

                return e;
            };

            var $cal = $('#calendar');
            $cal.fullCalendar({
                schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
                height: 'auto',
                defaultView: 'agendaWeek',
                minTime: '09:00:00',
                maxTime: '23:00:00',
                header: {
                    left: 'prev',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay,listMonth next',
                },
                footer: false,
                slotDuration: '00:15:00',
                editable: true,
                droppable: true,
                dragRevertDuration: 0,
                drop: function (date) {
                    var count = $(this).data('count') - 1;

                    var event = $(this).data('event');
                    $('#' + event.counter).text(count);

                    $(this).data('count', count);
                    if (count == 0) {
                        $(this).hide();
                        $('#' + $(this).data('counter')).hide();
                    }
                },
                eventReceive: function (event) {
                    $.ajax({
                        url: "{{ path('admin_session_create_time_slot') }}",
                        data: {
                            "time_slot": {
                                "start": moment(event.start).format('YYYY-MM-DD HH:mm'),
                                "end": moment(event.end).format('YYYY-MM-DD HH:mm'),
                                "location": event.location.id,
                                "session": event.session,
                                "capacity": event.capacity,
                            }
                        },
                        type: 'POST'
                    }).done(function (data) {
                        event.id = data;
                        $('#calendar').fullCalendar('updateEvent', event);
                    }).fail(function () {

                    });
                },
                eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
                    $.ajax({
                        url: "{{ path('admin_session_edit_time_slot') }}",
                        data: {
                            "time_slot": {
                                "id": event.id,
                                "start": moment(event.start).format('YYYY-MM-DD HH:mm'),
                                "end": moment(event.end).format('YYYY-MM-DD HH:mm'),
                                "location": event.location.id,
                                "session": event.session,
                                "capacity": event.capacity,
                            }
                        },
                        type: 'POST'
                    }).done(function () {

                    }).fail(function () {
                        revertFunc();
                    })
                },
                // TODO eventDragStart/Stop disable popover
                eventDragStop: function (event, jsEvent, ui, view) {
                    // if (isEventOverDiv(jsEvent.clientX, jsEvent.clientY)) {
                    //     $('#calendar').fullCalendar('removeEvents', event._id);
                    // }
                },
                eventClick: function (event, jsEvent, view) {
                    $('#timeslot-modal').modal();

                    $('#timeslot-modal').data('event', event.id);

                    $('#time_slot_date').val(moment(event.start).format('YYYY-MM-DD'));
                    $('#time_slot_startTime').val(moment(event.start).format('HH:mm'));
                    $('#time_slot_endTime').val(moment(event.end).format('HH:mm'));
                    $('#time_slot_location').val(event.location.id).change();
                    $('#time_slot_capacity').val(event.capacity);

                    $('#time_slot_session').val(event.session);
                    $('#time_slot_start').val(moment(event.start).format('YYYY-MM-DD HH:mm'));
                    $('#time_slot_end').val(moment(event.end).format('YYYY-MM-DD HH:mm'));

                    $('#time_slot_assignments').empty();

                    $.ajax({
                        url: "{{ path('admin_session_assignments') }}",
                        data: {
                            "date": moment(event.start).format('YYYY-MM-DD'),
                            "time": moment(event.start).format('HH:mm')
                        },
                        type: "GET",
                    }).done(function (data) {
                        for (var i in data) {
                            $('#time_slot_assignments').append($('<option>', {value: data[i].id}).text(data[i].mentor));
                        }

                        for (var i in event.assignments) {
                            $('#time_slot_assignments option[value="' + event.assignments[i].id + '"]').prop('selected', true);
                            console.log(event.assignments[i]);
                        }
                    });
                },
                eventLimit: true,
                themeSystem: 'bootstrap3',
                bootstrapGlypicons: {
                    close: 'glyphicon-remove',
                    prev: 'glyphicon-chevron-left',
                    next: 'glyphicon-chevron-right',
                    prevYear: 'glyphicon-backward',
                    nextYear: 'glyphicon-forward'
                },
                businessHours: [
                    {% for day in hours %}
                    {
                        dow: [{{ day.day }}],
                        start: '{{ day.startTime|date('H:i') }}',
                        end: '{{ day.endTime|date('H:i') }}'
                    },
                    {% endfor %}
                ],
                events: {
                    url: '{{ path('events') }}',
                    type: 'POST',
                    data: {
                        // put parameters such as filters here
                    },
                    success: function (events) {
                        // console.log(events);
                        // transform raw event data into something fullcalendar can use
                        for (var event in events) {
                            events[event] = transformEvent(events[event]);
                        }
                    }
                },
                eventRender: function (event, element) {
                    var view = $('#calendar').fullCalendar('getView').type;
                    console.log(view);
                    if (view == 'listMonth') {
                        // console.log(element);
                        var descr = '<td class="fc-list-item-title">'
                            + "<strong>Location:</strong> " + event.location.room
                            + '</td>';
                        element.find('.fc-list-item-title').append(descr);
                    } else if(view == 'month') {
                        element.find('.fc-title').remove();
                        element.find('.fc-time').remove();
                        var descr =
                            '<div class="no-overflow"><strong>Title:</strong> ' + event.title + '</div>';

                        element.append(descr);
                    } else {
                        element.find('.fc-title').remove();
                        element.find('.fc-time').remove();
                        var descr =
                            '<div class="no-overflow"><strong>Title:</strong> ' + event.title + '</div>'
                            + "<strong>Location:</strong> " + event.location.room + '<br>';
                        if (event.registrations != null) {
                            descr += "<strong>Capacity:</strong> " + (event.registrations ? event.registrations : 0) + '/' + event.capacity + '<br>';
                        }
                        // + "<strong>Time:</strong> "
                        // + moment(event.start).format("HH:mm") + '-'
                        // + moment(event.end).format("HH:mm") + '<br>';
                        if (event.hasOwnProperty('assignments')) {
                            var names = [];
                            for (var key in event.assignments) {
                                names[key] = event.assignments[key].mentor.firstName;
                            }

                            descr += "<strong>Mentors:</strong> " + names.join(", ");
                        }
                        element.append(descr);

                        // element.popover({
                        //     title: event.title,
                        //     trigger: 'hover',
                        //     placement: 'top',
                        //     container: 'body'
                        // });
                    }
                }
            });

            $('#timeslot-submit').on('click', function () {
                $('[name="time_slot"]').submit();
            });

            $('[name="time_slot"]').on('submit', function (e) {
                e.preventDefault();

                var form = $('[name="time_slot"]');

                var data = new FormData(this);
                var event = $('#timeslot-modal').data("event");

                data.append("id", event);
                $.ajax({
                    url: $(this).prop('action'),
                    data: data,
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    beforeSend: function () {
                        form.hide();
                        $('#timeslot-loader').show();
                    }
                }).always(function () {
                    $('#timeslot-loader').hide();
                    form.show();
                }).done(function (data, textStatus, jqXHR) {
                    $('#timeslot-modal').modal('hide');
                    // need to update the event
                }).fail(function () {

                });
            });

            var updateTimeSlotForm = function() {
                $.ajax({
                    url: "{{ path('admin_session_assignments') }}",
                    data: {
                        "date": $('#time_slot_date').val(),
                        "time": $('#time_slot_startTime').val()
                    },
                    type: "GET",
                    beforeSend: function() {
                        $('#time_slot_assignments').empty();
                    }
                }).done(function (data) {
                    for (var i in data) {
                        $('#time_slot_assignments').append($('<option>', {value: data[i].id}).text(data[i].mentor));
                    }

                    for (var i in event.assignments) {
                        $('#time_slot_assignments option[value="' + event.assignments[i].id + '"]').prop('selected', true);
                        console.log(event.assignments[i]);
                    }
                });
            };
            $('#time_slot_date').on('change', updateTimeSlotForm);
            $('#time_slot_startTime').on('change', updateTimeSlotForm);
            $('#time_slot_endTime').on('change', updateTimeSlotForm);
        });
    </script>
{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-xs-7">
            <h3>Calendar</h3>
        </div>
        <div class="col-xs-3">
            <div class="btn-group" role="group">
                {#<button id="create-session" type="button" class="btn btn-default">Create Session</button>#}
                <a class="btn btn-default" href="{{ path('admin_session_create') }}">Create Session</a>
                <a id="view-requests" href="{{ path('admin_session_requests') }}" class="btn btn-default">View
                    Requests</a>
            </div>
        </div>
        <div class="col-xs-2">
            <div class="input-group">
                <button id="sidebar-toggle" class="btn btn-default" type="button">Toggle Sidebar</button>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="container">
        <div id="row-main" class="row row-eq-height">
            <div id="content" class="col-md-10">
                <div class="panel">
                    <div class="panel-body">
                        <div id='calendar'></div>
                    </div>
                </div>
            </div>
            <div id="sidebar" class="col-md-2">
                <div class="affix">
                    <div class="panel">
                        <div class="panel-body">
                            <h3>
                                <small>Unscheduled Sessions</small>
                            </h3>
                            <div id="external-events">
                                {% for session in sessions %}
                                    {% set count = session.repeats - session.timeSlots|length %}
                                    <div id="external-{{ session.id }}" class="fc-event label label-default"
                                         style="background-color: {{ session.color }};
                                                 display: inline-block;
                                                 /*overflow:hidden;*/
                                                 /*text-overflow: ellipsis;*/
                                                 max-width: 120px"
                                         data-event='{
                                                "id":"temp-{{ session.id }}",
                                                "title":"{{ session.topic }}",
                                                "color":"{{ session.color }}",
                                                "stick":false,
                                                "duration":"{{ session.defaultDuration|date('%H:%I') }}",
                                                "capacity":"{{ session.defaultCapacity }}",
                                                "location":{
                                                    "id":"{{ session.defaultLocation.id }}",
                                                    "room":"{{ session.defaultLocation }}"
                                                    },
                                                "session":"{{ session.id }}"
                                                }'
                                         data-counter="counter-{{ session.id }}"
                                         data-count="{{ count }}">
                                        {{ session.topic }}
                                    </div>
                                    <span id="counter-{{ session.id }}" class="badge">{{ count }}</span>
                                    <br>
                                {% endfor %}
                            </div>
                            {#</li>#}
                            {#</ul>#}
                            {#</div>#}
                            {#</div>#}
                            {#<div class="row">#}
                            {#<div class="col-xs-12">#}
                            {#<h3>#}
                            {#<small>Filters</small>#}
                            {#</h3>#}
                            {#<h4>#}
                            {#<small>Course</small>#}
                            {#</h4>#}
                            {#<select multiple class="form-control">#}

                            {#</select>#}
                            {#<h4>#}
                            {#<small>Instructor</small>#}
                            {#</h4>#}
                            {#<select multiple class="form-control">#}

                            {#</select>#}
                            {#<h4>#}
                            {#<small>Room</small>#}
                            {#</h4>#}
                            {#<select multiple class="form-control">#}

                            {#</select>#}
                            {#</div>#}
                            {#</div>#}
                            {#<div class="row">#}
                            {#<div class="col-xs-12"></div>#}
                            {#</div>#}
                        </div>
                        {#<div class="panel-footer"></div>#}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="timeslot-modal" class="modal fade" data-event>
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span
                                class="sr-only">close</span></button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    <div id="timeslot-loader" class="text-center" style="display: none;">
                        <img src="{{ asset('build/images/ajax-loader.gif') }}">
                    </div>

                    {{ form_start(time_slot_form, { 'attr': {'class': 'bt-flabels js-flabels'} }) }}

                    <div class="form-group">
                        <div class="control-label">
                            {{ form_label(time_slot_form.date) }}
                        </div>
                        {{ form_errors(time_slot_form.date) }}
                        <div class="bt-flabels__wrapper">
                            {{ form_widget(time_slot_form.date, {'attr': {'class': 'form-control'}}) }}
                            <span class="bt-flabels__error-desc">Required</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label">
                            {{ form_label(time_slot_form.startTime) }}
                        </div>
                        {{ form_errors(time_slot_form.startTime) }}
                        <div class="bt-flabels__wrapper">
                            {{ form_widget(time_slot_form.startTime, {'attr': {'class': 'form-control'}}) }}
                            <span class="bt-flabels__error-desc">Required</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label">
                            {{ form_label(time_slot_form.endTime) }}
                        </div>
                        {{ form_errors(time_slot_form.endTime) }}
                        <div class="bt-flabels__wrapper">
                            {{ form_widget(time_slot_form.endTime, {'attr': {'class': 'form-control'}}) }}
                            <span class="bt-flabels__error-desc">Required</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label">
                            {{ form_label(time_slot_form.location) }}
                        </div>
                        {{ form_errors(time_slot_form.location) }}
                        <div class="bt-flabels__wrapper">
                            {{ form_widget(time_slot_form.location, {'attr': {'class': 'form-control'}}) }}
                            <span class="bt-flabels__error-desc">Required</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label">
                            {{ form_label(time_slot_form.capacity) }}
                        </div>
                        {{ form_errors(time_slot_form.capacity) }}
                        <div class="bt-flabels__wrapper">
                            {{ form_widget(time_slot_form.capacity, {'attr': {'class': 'form-control'}}) }}
                            <span class="bt-flabels__error-desc">Required</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="control-label">
                            {{ form_label(time_slot_form.assignments) }}
                        </div>
                        {{ form_errors(time_slot_form.assignments) }}
                        <div class="bt-flabels__wrapper">
                            {{ form_widget(time_slot_form.assignments, {'attr': {'class': 'form-control'}}) }}
                            <span class="bt-flabels__error-desc">Required</span>
                        </div>
                    </div>

                    {{ form_rest(time_slot_form) }}
                    {{ form_end(time_slot_form) }}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="timeslot-submit" type="button" class="btn btn-success">
                        Submit
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{# TODO
    files, quiz creation success, colors, add session on success of creation, no on click for quiz,
    pdf export
#}